#!/usr/bin/env python
#coding=utf-8

__author__ = 'm0nsieurPsych0'

import re
import requests
import bs4
import time
import hashlib
from base64 import b64decode, b64encode

'''
The challenge:
                You have 3 seconds to get the secret word.
                Send the answer back using https://ringzer0ctf.com/challenges/15/[your_string]
'''
'''
The writeup:
                The elf message is in base64 see the "==" at the end.
                We also notice a lot of line of the elf message is repeating 

                There is also a checksum (most likely md5), which mean possibly two things:
                1- the checksum is the correct value we are looking for
                2- this is the exact checksum of the b64 elf message (which would not help us)
                3- The md5 process uses padding for the message to reach 448 bit.  

                One other possibility is that "elf" stands for "Executable and Linkable Format"

                sources: 
                            https://www.educba.com/md5-alogrithm/

'''

class Read_me_if_you_can_17():
    def __init__(self):
        self._baseURL = "https://ringzer0ctf.com/challenges/"
        self._challengeNumber = "15"
        # DESTROY!!!!!!!
        self._username = "*"
        self._password = "*"
        # DESTROY!!!!!!!
        
    def _decodeElfMessage(self):
        # print(hashlib.md5(b'').hexdigest())
    
    def _writeFlag(self, flag):
        with open("flag.txt", "w", encoding="utf-8") as f:
            f.write(flag)

    def _pageRequests(self):
        payload = {'action': 'login', 'username': self._username, 'password': self._password}

        # Start the timer        
        tz = time.perf_counter()
        with requests.session() as c:
            # login using our credentials
            c.post('https://ringzer0ctf.com/login', data=payload)

            # we parse the page
            response = c.get(f"{self._baseURL}{self._challengeNumber}")
            
            html = bs4.BeautifulSoup(response.text, features="html5lib")
            tag = html.findAll("div",{"class":"message"})
                
            # we use a regex to catch everything between <br/> tags
            b64Payload = re.search(r'(<img src="data:image\/png;base64,)(.*)"/>', str(tag[0])).group(2).strip()
            
            # calling the ocr function on the payload
            answer = None
            
            print(answer)

            # we send the clear text answer
            response = c.get(f"{self._baseURL}{self._challengeNumber}/{answer}")
            # find the flag
            flag = re.search(r'<div class="alert alert-info">(.*)</div>', str(response.text))
            # We return the flag
            try:
                return tz, flag.group(1)
            except AttributeError:
                # if there is no group for the flag variable we failed
                return tz, None
    
    def main(self):
        flag = None
        self._decodeElfMessage()
        # Start the process
        # while flag is None:
        #     # Sleep 5 seconds on fail
        #     time.sleep(5)
            
        #     tz, flag = self._pageRequests()
        
        # print(f"time elapse: {time.perf_counter() - tz}")

        # # Print stats and flag
        # print(flag)

        # # Write flag to file
        # self._writeFlag(flag)

if __name__ == "__main__":
    Read_me_if_you_can_17().main()